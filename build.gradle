plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.3'
	id 'io.spring.dependency-management' version '1.1.0'
    id 'pmd'
    id 'jacoco'
    id 'com.github.davidmc24.gradle.plugin.avro' version '1.6.0'
}

group = 'com.epam.learn'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
    maven {
        url "https://packages.confluent.io/maven/"
    }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka:3.1.5'
    implementation 'org.springframework.cloud:spring-cloud-stream-schema:2.2.1.RELEASE'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    implementation 'junit:junit:4.13.1'
    implementation 'io.confluent:kafka-avro-serializer:7.3.2'
    implementation 'io.confluent:kafka-schema-registry-client:7.3.2'
    implementation "org.apache.avro:avro:1.11.0"
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}

pmd {
    consoleOutput = true
    ruleSetFiles = files("pmd-rules.xml")
    ruleSets = []
}
